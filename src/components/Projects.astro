---
import React from "../icons/React.astro";
import TypeScript from "../icons/TypeScript.astro";
import Tailwind from "../icons/Tailwind.astro";
import NodeJs from "../icons/NodeJs.astro";
import Express from "../icons/Express.astro";
import MongoDB from "../icons/MongoDB.astro";
import Netlify from "../icons/Netlify.astro";
import Zod from "../icons/Zod.astro";

const TAGS = {
    REACT:{
        name:"React",
        class:"bg-blue-950 text-white",
        icon: React,
    },
    TYPESCRIPT:{
        name:"TypeScript",
        class:"bg-green-950 text-white",
        icon: TypeScript,
    },
    TAILWIND:{
        name:"Tailwind",
        class:"bg-[#003159] text-white",
        icon: Tailwind,
    },
    NODEJS:{
        name:"Node.js",
        class:"bg-green-950 text-white",
        icon: NodeJs,
    },
    EXPRESS:{
        name:"Express",
        class:"bg-white text-black",
        icon: Express,
    },
    MONGODB:{
        name:"MongoDB",
        class:"bg-purple-950 text-white",
        icon: MongoDB,
    },
    NETLIFY:{
        name:"Netlify",
        class:"bg-blue-950 text-white",
        icon: Netlify,
    },
    ZOD:{
        name:"Zod",
        class:"bg-white text-black",
        icon: Zod,
    },
}

const PROJECTS = [
  {
    title: "Gestor de Tareas - Club Crecimiento tecnológico",
    description: "Aplicación web desarrollada para optimizar la gestión de proyectos y actividades del Club Crecimiento Tecnológico de la Universidad Alejandro de Humboldt. Centraliza la asignación, seguimiento y priorización de tareas entre miembros, mejorando la colaboración y productividad del equipo.",
    link: "https://gestor-de-tareas-gamma.vercel.app/auth/login",
    github: "https://astro.build",
    image: "/proyecto1.webp",
    tags: [TAGS.REACT, TAGS.TYPESCRIPT, TAGS.TAILWIND,  TAGS.NODEJS, TAGS.EXPRESS, TAGS.MONGODB],
  },
  {
    title: "Cotizador de Criptomonedas",
    description: "Aplicación web que permite a los usuarios consultar el precio de diferentes criptomonedas en tiempo real. Utiliza la API de CoinDesk para obtener datos actualizados y ofrece una interfaz intuitiva para facilitar la navegación y la búsqueda de información.",
    link: "https://imaginative-cobbler-ca3c7d.netlify.app/",
    github: "https://astro.build",
    image: "/proyecto2.webp",
    tags: [TAGS.REACT, TAGS.TYPESCRIPT, TAGS.NODEJS, TAGS.NETLIFY, TAGS.ZOD],
  },
];
---

{
    PROJECTS.map(({image,title,description,tags,link}) => (
        <article class="group relative overflow-hidden rounded-xl border border-gray-800 p-6 transition-all hover:border-amber-400/30 hover:bg-gradient-to-b hover:from-gray-900/50 hover:to-gray-900/10 backdrop-blur-sm">
            {/* Fondo decorativo */}
            <div class="absolute -right-10 -top-10 h-32 w-32 rounded-full bg-amber-400/10 blur-3xl transition-all group-hover:bg-amber-400/20" />
            
            {/* Contenido */}
            <a href={link} target="_blank" rel="noopener" class="relative z-10">
                <h3 class="text-2xl font-bold text-amber-200 mb-3 transition-all group-hover:text-amber-300">{title}</h3>
            </a>
            
            <div class="relative z-10 flex flex-wrap items-center gap-3 mb-4">
                <a href={link} target="_blank" rel="noopener" class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-700 hover:border-amber-400/50 transition-all focus:outline-none focus:ring-2 focus:ring-amber-400/30">
                    Visitar proyecto
                    <svg class="w-3 h-3 ms-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                    </svg>
                </a>
            </div>
            
            <p class="relative z-10 text-gray-300 mb-5 leading-relaxed">{description}</p>
            
            <ul class="relative z-10 flex flex-wrap gap-2 mb-6">
                {tags.map((tag) => (
                    <li>
                        <span class={`inline-flex items-center gap-1.5 rounded-full ${tag.class} py-1.5 px-3 text-xs font-medium transition-all group-hover:scale-105`}>
                            <tag.icon class="size-4" />
                            {tag.name}
                        </span>
                    </li>
                ))}
            </ul>
            
            <div class="relative overflow-hidden rounded-lg border border-gray-800 transition-all group-hover:border-amber-400/30">
                <img 
                    class="w-full h-auto object-cover transition-transform duration-500 group-hover:scale-[1.02]" 
                    src={image} 
                    alt={`Captura de pantalla del proyecto ${title}`} 
                    loading="lazy"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 transition-opacity group-hover:opacity-100" />
            </div>
        </article>
    ))
}